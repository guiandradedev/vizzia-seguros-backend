services:
  # Serviço da sua aplicação NestJS
  api:
    container_name: nest-api
    build:
      context: . # Onde encontrar o Dockerfile (diretório atual)
      target: builder # Usa o 'builder' stage para desenvolvimento (para hot-reload)
    # Comandos de desenvolvimento (hot-reload)
    command: npm run start:dev
    # Carrega variáveis de ambiente do arquivo .env
    env_file:
      - .env
    # Mapeamento de portas (host:container)
    ports:
      - '3000:3000' # Porta da aplicação
    # Monta volumes para hot-reload e persistência
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    # Garante que o DB inicie antes do backend
    depends_on:
      - db
    networks:
      - backend-network
    user: "${UID}:${GID}"

  # Serviço do Banco de Dados (PostgreSQL)
  db:
    container_name: postgres-db
    image: postgres:15-alpine # Imagem oficial do PostgreSQL
    # Carrega variáveis de ambiente do arquivo .env
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      # Persiste os dados do banco de dados no seu disco local
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data: